<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="de27d36c-9d0f-45d0-b07f-864e5e38562e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/ElfStack.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/ElfStackReverse.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2IKkrFa3yltprKWaC1WR0WV0raP" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "last.edited.regexp": "Sample Text",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Application.ElfStackReverse">
    <configuration name="ElfBadges" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ElfBadges" />
      <module name="AdventOfCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ElfLessStrictOverlap" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ElfLessStrictOverlap" />
      <module name="AdventOfCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ElfSectionOverlapPairsCounter" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ElfSectionOverlapPairsCounter" />
      <module name="AdventOfCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ElfStack" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ElfStack" />
      <module name="AdventOfCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ElfStackReverse" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ElfStackReverse" />
      <module name="AdventOfCode" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ElfStackReverse" />
        <item itemvalue="Application.ElfStack" />
        <item itemvalue="Application.ElfLessStrictOverlap" />
        <item itemvalue="Application.ElfSectionOverlapPairsCounter" />
        <item itemvalue="Application.ElfBadges" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="de27d36c-9d0f-45d0-b07f-864e5e38562e" name="Changes" comment="" />
      <created>1669937861211</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669937861211</updated>
      <workItem from="1669937862728" duration="13084000" />
      <workItem from="1670078063905" duration="40465000" />
    </task>
    <task id="LOCAL-00001" summary="Started Advent of Code (on the Thursday of the first week of the season)">
      <created>1669937995141</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1669937995141</updated>
    </task>
    <task id="LOCAL-00002" summary="Finished counting the calories of a set of ambitious elves, earned a ⭐ on the first day of the contest">
      <created>1669941983328</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1669941983328</updated>
    </task>
    <task id="LOCAL-00003" summary="Added a calculation (just out of curiosity-- not necessary for either star-earning problem) to find the total amount of nutrition gathered by all elves, not just the best elf, and not just the top 3 elves">
      <created>1669989340195</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1669989340195</updated>
    </task>
    <task id="LOCAL-00004" summary="first iteration of the second day's code-- calculating the scores given results of games based on an encoding of which move each player made">
      <created>1669996408701</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1669996408701</updated>
    </task>
    <task id="LOCAL-00005" summary="first daily problem on day 3">
      <created>1670101583440</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1670101583440</updated>
    </task>
    <task id="LOCAL-00006" summary="second daily problem for dec 3&#10;&#10;elves now travel in groups and have a single common elemnt between them &#10;&#10;common element = &quot;badge&quot;&#10;&#10;need sum of priorities (same calculation rules as other puzzle from today) of badges of each of 100 groups of 3 elves">
      <created>1670105815978</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1670105815978</updated>
    </task>
    <task id="LOCAL-00007" summary="first problem dec 4&#10;given list of 4 numbers figure out how many lists are such that &#10;the first pair contains the second or &#10;the second pair contains the first">
      <created>1670190748884</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1670190748884</updated>
    </task>
    <task id="LOCAL-00008" summary="renamed class">
      <created>1670191057759</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1670191057759</updated>
    </task>
    <task id="LOCAL-00009" summary="working from framework of first problem, find howmany sets overlap at all">
      <created>1670194490244</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1670194490244</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Started Advent of Code (on the Thursday of the first week of the season)" />
    <MESSAGE value="Finished counting the calories of a set of ambitious elves, earned a ⭐ on the first day of the contest" />
    <MESSAGE value="Added a calculation (just out of curiosity-- not necessary for either star-earning problem) to find the total amount of nutrition gathered by all elves, not just the best elf, and not just the top 3 elves" />
    <MESSAGE value="first iteration of the second day's code-- calculating the scores given results of games based on an encoding of which move each player made" />
    <MESSAGE value="first daily problem on day 3" />
    <MESSAGE value="second daily problem for dec 3&#10;&#10;elves now travel in groups and have a single common elemnt between them &#10;&#10;common element = &quot;badge&quot;&#10;&#10;need sum of priorities (same calculation rules as other puzzle from today) of badges of each of 100 groups of 3 elves" />
    <MESSAGE value="first problem dec 4&#10;given list of 4 numbers figure out how many lists are such that &#10;the first pair contains the second or &#10;the second pair contains the first" />
    <MESSAGE value="renamed class" />
    <MESSAGE value="working from framework of first problem, find howmany sets overlap at all" />
    <option name="LAST_COMMIT_MESSAGE" value="working from framework of first problem, find howmany sets overlap at all" />
  </component>
</project>